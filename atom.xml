<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>琐事</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-13T02:37:02.210Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>guojiawei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode---数组</title>
    <link href="http://yoursite.com/2019/04/13/1/"/>
    <id>http://yoursite.com/2019/04/13/1/</id>
    <published>2019-04-13T01:35:28.000Z</published>
    <updated>2019-04-13T02:37:02.210Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-寻找数组的中心索引"><a href="#1-寻找数组的中心索引" class="headerlink" title="1.寻找数组的中心索引"></a>1.寻找数组的中心索引</h1><p>给定一个整数类型的数组 nums，请编写一个能够返回数组“中心索引”的方法。</p><p>我们是这样定义数组中心索引的：数组中心索引的左侧所有元素相加的和等于右侧所有元素相加的和。</p><p>如果数组不存在中心索引，那么我们应该返回 -1。如果数组有多个中心索引，那么我们应该返回最靠近左边的那一个。</p><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><p>输入: nums = [1, 7, 3, 6, 5, 6]</p><p>输出: 3</p><p>解释:<br>索引3 (nums[3] = 6) 的左侧数之和(1 + 7 + 3 = 11)，与右侧数之和(5 + 6 = 11)相等。同时, 3 也是第一个符合要求的中心索引。</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><pre><code>1.先计算出数组各项之和sum2.进行一个循环，leftSum+=num[i], sum-=num[i],当leftSum == sum时，返回此时索引，当循环结束时没有，则返回-1</code></pre><h3 id="详细代码："><a href="#详细代码：" class="headerlink" title="详细代码："></a>详细代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public int pivotIndex(int[] nums) &#123;</span><br><span class="line">     int sum = 0;</span><br><span class="line">       for(int num : nums)&#123;</span><br><span class="line">           sum +=num;</span><br><span class="line">       &#125;</span><br><span class="line">       int leftSum = 0;</span><br><span class="line">       for(int i = 0; i &lt; nums.length; i++)&#123;</span><br><span class="line">           sum = sum - nums[i];</span><br><span class="line">           if(leftSum == sum)&#123;</span><br><span class="line">               return i;</span><br><span class="line">           &#125;</span><br><span class="line">           leftSum = leftSum + nums[i];</span><br><span class="line">       &#125;</span><br><span class="line">       return -1;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="2-至少是其他数字两倍的最大数"><a href="#2-至少是其他数字两倍的最大数" class="headerlink" title="2.至少是其他数字两倍的最大数"></a>2.至少是其他数字两倍的最大数</h1><p>在一个给定的数组nums中，总是存在一个最大元素 。</p><p>查找数组中的最大元素是否至少是数组中每个其他数字的两倍。</p><p>如果是，则返回最大元素的索引，否则返回-1。</p><h3 id="示例：-1"><a href="#示例：-1" class="headerlink" title="示例："></a>示例：</h3><p>输入: nums = [3, 6, 1, 0]</p><p>输出: 1</p><p>解释: 6是最大的整数, 对于数组中的其他整数,<br>6大于数组中其他元素的两倍。6的索引是1, 所以我们返回1.</p><h3 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h3><pre><code>1.首先找出数组中的最大值2.然后遍历数组，判断这个数是否至少是其他数的二倍</code></pre><h3 id="详细代码：-1"><a href="#详细代码：-1" class="headerlink" title="详细代码："></a>详细代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public int dominantIndex(int[] nums) &#123;</span><br><span class="line">       int max = 0;</span><br><span class="line">       for(int i = 1; i &lt; nums.length; i++)&#123;</span><br><span class="line">           if(nums[i] &gt; nums[max] )&#123;</span><br><span class="line">               max = i;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       for (int j = 0; j &lt; nums.length; j++) &#123;</span><br><span class="line">           if (j != max &amp;&amp; nums[max] &lt; 2 * nums[j] ) &#123;</span><br><span class="line">               //进行判断</span><br><span class="line">               return -1;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       return max;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="3-加一"><a href="#3-加一" class="headerlink" title="3.加一"></a>3.加一</h1><p>给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。</p><p>最高位数字存放在数组的首位， 数组中每个元素只存储一个数字。</p><p>你可以假设除了整数 0 之外，这个整数不会以零开头。</p><h3 id="示例：-2"><a href="#示例：-2" class="headerlink" title="示例："></a>示例：</h3><p>输入: [1,2,3]</p><p>输出: [1,2,4]</p><p>解释: 输入数组表示数字 123。</p><h3 id="情况："><a href="#情况：" class="headerlink" title="情况："></a>情况：</h3><pre><code>1.不需要进位，例：1232.只需要，个位进一，例：1293.连进多位，例：45994.高位进一，例：999</code></pre><h3 id="详细代码：-2"><a href="#详细代码：-2" class="headerlink" title="详细代码："></a>详细代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public int[] plusOne(int[] digits) &#123;</span><br><span class="line">       int n = digits.length;</span><br><span class="line">       for (int i = n - 1; i &gt;= 0; i--) &#123;</span><br><span class="line">           if (digits[i] &lt; 9)&#123;</span><br><span class="line">               //直接加一，无需进位</span><br><span class="line">               digits[i]++;</span><br><span class="line">               return digits;</span><br><span class="line">           &#125;else if (digits[i] == 9)&#123;</span><br><span class="line">               //本位置为0</span><br><span class="line">               digits[i] = 0;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       //若最高位需进一，初始化一个长度为n+1的数组，高位为1</span><br><span class="line">       int[] result = new int[n + 1];</span><br><span class="line">       result[0] = 1;</span><br><span class="line">       return result;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-寻找数组的中心索引&quot;&gt;&lt;a href=&quot;#1-寻找数组的中心索引&quot; class=&quot;headerlink&quot; title=&quot;1.寻找数组的中心索引&quot;&gt;&lt;/a&gt;1.寻找数组的中心索引&lt;/h1&gt;&lt;p&gt;给定一个整数类型的数组 nums，请编写一个能够返回数组“中心索引”
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="数组" scheme="http://yoursite.com/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>简单的Java分层项目Demo</title>
    <link href="http://yoursite.com/2019/03/07/1/"/>
    <id>http://yoursite.com/2019/03/07/1/</id>
    <published>2019-03-07T02:25:19.000Z</published>
    <updated>2019-04-13T01:52:06.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分层的记账项目"><a href="#分层的记账项目" class="headerlink" title="分层的记账项目"></a>分层的记账项目</h1><h2 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h2><p> 这是一个家庭记账软件，主要功能有查询账务、多条件组合查询账务、添加账务、编辑账务、删除账务，并且分为四层：View层、Controller层、Service层、Dao层。这个小项目主要训练的是对项目的分析能力和程序分层能力。</p><h2 id="View层"><a href="#View层" class="headerlink" title="View层"></a>View层</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">public class MainView &#123;</span><br><span class="line">    private ZhangWuController controller = new ZhangWuController();</span><br><span class="line">    /*</span><br><span class="line">    * 实现界面效果</span><br><span class="line">    * 接受用户输入</span><br><span class="line">    * */</span><br><span class="line">    public void run()&#123;</span><br><span class="line">        Scanner sc = new Scanner(System.in);</span><br><span class="line">        while (true)&#123;</span><br><span class="line">            System.out.println(&quot;---------------管家婆家庭记账软件---------------&quot;);</span><br><span class="line">            System.out.println(&quot;1.添加账务　2.编辑账务　3.删除账务　4.查询账务　5.退出系统&quot;);</span><br><span class="line">            System.out.println(&quot;请输入要操作的功能序号[1-5]:&quot;);</span><br><span class="line">            //接受用户输入</span><br><span class="line">            int choose = sc.nextInt();</span><br><span class="line">            switch (choose)&#123;</span><br><span class="line">                case 1:</span><br><span class="line">                    //添加账务</span><br><span class="line">                    addZhangWu();</span><br><span class="line">                    break;</span><br><span class="line">                case 2:</span><br><span class="line">                    //编辑账务</span><br><span class="line">                    editZhangWu();</span><br><span class="line">                    break;</span><br><span class="line">                case 3:</span><br><span class="line">                    //删除账务</span><br><span class="line">                    deleteZhangWu();</span><br><span class="line">                    break;</span><br><span class="line">                case 4:</span><br><span class="line">                    selectZhangwu();</span><br><span class="line">                    break;</span><br><span class="line">                case 5:</span><br><span class="line">                    System.out.println(&quot;bye&quot;);</span><br><span class="line">                    System.exit(0);</span><br><span class="line">                    break;</span><br><span class="line">                default:</span><br><span class="line">                    System.out.println(&quot;输入有误，请重输&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void addZhangWu()&#123;</span><br><span class="line">        System.out.println(&quot;选择的是添加账务功能，请输入一下内容&quot;);</span><br><span class="line">        Scanner sc = new Scanner(System.in);</span><br><span class="line">        System.out.println(&quot;输入分类名称：&quot;);</span><br><span class="line">        String flname = sc.next();</span><br><span class="line">        System.out.println(&quot;输入金额：&quot;);</span><br><span class="line">        double money = sc.nextDouble();</span><br><span class="line">        System.out.println(&quot;输入账户：&quot;);</span><br><span class="line">        String zhanghu = sc.next();</span><br><span class="line">        System.out.println(&quot;输入日期：格式 XXXX-XX-XX&quot;);</span><br><span class="line">        String createtime = sc.next();</span><br><span class="line">        System.out.println(&quot;输入具体描述：&quot;);</span><br><span class="line">        String description = sc.next();</span><br><span class="line">        //zwid可设置为0，因为后面不接收zwid 省代码 也可以用set方法</span><br><span class="line">        ZhangWu zw = new ZhangWu(0, flname,money,zhanghu,createtime,description);</span><br><span class="line">        controller.addZhangWu(zw);</span><br><span class="line">        System.out.println(&quot;恭喜！添加成功！！&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>  <strong>View作用：</strong> View层就是视图层，即项目中的界面</p>  <img src="/2019/03/07/1/QQ图片20190307132040.jpg" title="This is an example image">  <center> 查询功能</center><hr><h2 id="Controller层"><a href="#Controller层" class="headerlink" title="Controller层"></a>Controller层</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">  public class ZhangWuController &#123;</span><br><span class="line">    private ZhangWuService service = new ZhangWuService();</span><br><span class="line"></span><br><span class="line">    public void addZhangWu(ZhangWu zw)&#123;</span><br><span class="line">        service.addZhangWu(zw);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public List&lt;ZhangWu&gt; selectAll()&#123;</span><br><span class="line">        return service.selectAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public List&lt;ZhangWu&gt; select(String startDate, String endDate)&#123;</span><br><span class="line">        return service.select(startDate, endDate);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void editZhangWu(ZhangWu zw) &#123;</span><br><span class="line">        service.editZhangWu(zw);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void deleteZhangWu(int zwid) &#123;</span><br><span class="line">        service.deleteZhangWu(zwid);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  <strong>Controller作用：</strong> 控制层, 获取界面上的数据,为界面设置数据; 将要实现的功能交给业务层处理</p><hr><h2 id="Service层"><a href="#Service层" class="headerlink" title="Service层"></a>Service层</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">  public class ZhangWuService &#123;</span><br><span class="line">    private ZhangWuDao dao = new ZhangWuDao();</span><br><span class="line">    //由控制层调用</span><br><span class="line">    public void addZhangWu(ZhangWu zw)&#123;</span><br><span class="line">        dao.addZhangWu(zw);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public List&lt;ZhangWu&gt; selectAll()&#123;</span><br><span class="line">        return dao.selectAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public List&lt;ZhangWu&gt; select(String startDate, String endDate)&#123;</span><br><span class="line">        return dao.select(startDate, endDate);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void editZhangWu(ZhangWu zw) &#123;</span><br><span class="line">        dao.editZhangWu(zw);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void deleteZhangWu(int zwid) &#123;</span><br><span class="line">        dao.deleteZhangWu(zwid);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  <strong>service层作用</strong>: 业务层, 功能的实现, 与controller控制层和数据访问层DAO交互, 将对数据库的操作交给DAO数据访问层来处理。</p><hr><h2 id="Dao层"><a href="#Dao层" class="headerlink" title="Dao层"></a>Dao层</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public class ZhangWuDao &#123;</span><br><span class="line">    private QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource());</span><br><span class="line">    //查询数据库，有业务层调用</span><br><span class="line">    //所有结果集存储到Bean对象中，存储到集合中</span><br><span class="line"></span><br><span class="line">    public void addZhangWu(ZhangWu zw)&#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            String sql = &quot;INSERT INTO gjp_zhangwu (flname,money,zhanghu,createtime,description) VALUES (?,?,?,?,?)&quot;;</span><br><span class="line">            Object[] params = &#123;zw.getFlname(), zw.getMoney(), zw.getZhanghu(), zw.getCreatetime(), zw.getDescription()&#125;;</span><br><span class="line">            qr.update(sql,params);</span><br><span class="line">        &#125; catch (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            throw new RuntimeException(&quot;账务添加失败&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>dao层作用:</strong>  数据访问层, 用来操作数据库表的数据</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;分层的记账项目&quot;&gt;&lt;a href=&quot;#分层的记账项目&quot; class=&quot;headerlink&quot; title=&quot;分层的记账项目&quot;&gt;&lt;/a&gt;分层的记账项目&lt;/h1&gt;&lt;h2 id=&quot;项目简介&quot;&gt;&lt;a href=&quot;#项目简介&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java分层结构" scheme="http://yoursite.com/tags/Java%E5%88%86%E5%B1%82%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
</feed>

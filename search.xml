<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[leetCode---数组]]></title>
    <url>%2F2019%2F04%2F13%2F1%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[一个简单的Java分层项目Demo]]></title>
    <url>%2F2019%2F03%2F07%2F1%2F</url>
    <content type="text"><![CDATA[分层的记账项目项目简介 这是一个家庭记账软件，主要功能有查询账务、多条件组合查询账务、添加账务、编辑账务、删除账务，并且分为四层：View层、Controller层、Service层、Dao层。这个小项目主要训练的是对项目的分析能力和程序分层能力。 View层 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758public class MainView &#123; private ZhangWuController controller = new ZhangWuController(); /* * 实现界面效果 * 接受用户输入 * */ public void run()&#123; Scanner sc = new Scanner(System.in); while (true)&#123; System.out.println(&quot;---------------管家婆家庭记账软件---------------&quot;); System.out.println(&quot;1.添加账务 2.编辑账务 3.删除账务 4.查询账务 5.退出系统&quot;); System.out.println(&quot;请输入要操作的功能序号[1-5]:&quot;); //接受用户输入 int choose = sc.nextInt(); switch (choose)&#123; case 1: //添加账务 addZhangWu(); break; case 2: //编辑账务 editZhangWu(); break; case 3: //删除账务 deleteZhangWu(); break; case 4: selectZhangwu(); break; case 5: System.out.println(&quot;bye&quot;); System.exit(0); break; default: System.out.println(&quot;输入有误，请重输&quot;); &#125; &#125; &#125; public void addZhangWu()&#123; System.out.println(&quot;选择的是添加账务功能，请输入一下内容&quot;); Scanner sc = new Scanner(System.in); System.out.println(&quot;输入分类名称：&quot;); String flname = sc.next(); System.out.println(&quot;输入金额：&quot;); double money = sc.nextDouble(); System.out.println(&quot;输入账户：&quot;); String zhanghu = sc.next(); System.out.println(&quot;输入日期：格式 XXXX-XX-XX&quot;); String createtime = sc.next(); System.out.println(&quot;输入具体描述：&quot;); String description = sc.next(); //zwid可设置为0，因为后面不接收zwid 省代码 也可以用set方法 ZhangWu zw = new ZhangWu(0, flname,money,zhanghu,createtime,description); controller.addZhangWu(zw); System.out.println(&quot;恭喜！添加成功！！&quot;); &#125; View作用： View层就是视图层，即项目中的界面 查询功能 Controller层 1234567891011121314151617181920212223 public class ZhangWuController &#123; private ZhangWuService service = new ZhangWuService(); public void addZhangWu(ZhangWu zw)&#123; service.addZhangWu(zw); &#125; public List&lt;ZhangWu&gt; selectAll()&#123; return service.selectAll(); &#125; public List&lt;ZhangWu&gt; select(String startDate, String endDate)&#123; return service.select(startDate, endDate); &#125; public void editZhangWu(ZhangWu zw) &#123; service.editZhangWu(zw); &#125; public void deleteZhangWu(int zwid) &#123; service.deleteZhangWu(zwid); &#125;&#125; Controller作用： 控制层, 获取界面上的数据,为界面设置数据; 将要实现的功能交给业务层处理 Service层 1234567891011121314151617181920212223 public class ZhangWuService &#123; private ZhangWuDao dao = new ZhangWuDao(); //由控制层调用 public void addZhangWu(ZhangWu zw)&#123; dao.addZhangWu(zw); &#125; public List&lt;ZhangWu&gt; selectAll()&#123; return dao.selectAll(); &#125; public List&lt;ZhangWu&gt; select(String startDate, String endDate)&#123; return dao.select(startDate, endDate); &#125; public void editZhangWu(ZhangWu zw) &#123; dao.editZhangWu(zw); &#125; public void deleteZhangWu(int zwid) &#123; dao.deleteZhangWu(zwid); &#125;&#125; service层作用: 业务层, 功能的实现, 与controller控制层和数据访问层DAO交互, 将对数据库的操作交给DAO数据访问层来处理。 Dao层12345678910111213141516public class ZhangWuDao &#123; private QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); //查询数据库，有业务层调用 //所有结果集存储到Bean对象中，存储到集合中 public void addZhangWu(ZhangWu zw)&#123; try &#123; String sql = &quot;INSERT INTO gjp_zhangwu (flname,money,zhanghu,createtime,description) VALUES (?,?,?,?,?)&quot;; Object[] params = &#123;zw.getFlname(), zw.getMoney(), zw.getZhanghu(), zw.getCreatetime(), zw.getDescription()&#125;; qr.update(sql,params); &#125; catch (SQLException e) &#123; e.printStackTrace(); throw new RuntimeException(&quot;账务添加失败&quot;); &#125; &#125;&#125; dao层作用: 数据访问层, 用来操作数据库表的数据]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java分层结构</tag>
      </tags>
  </entry>
</search>
